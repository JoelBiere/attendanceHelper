X lock down login and register process
X create SQL tables 

X offer delete roster button

X take attendance 
    --upload csv file, select which class its for, then print out info

TODO

/ manual manipulation of student rosters
    --offer a form, for student_name, ID number, dropdown of class_names, (store session id), and session username


/ debugging
    - don't allow stuff like
        -duplicate class_names
        - files that don't match the specified format

    START_LINE PROBLEM
        -if a teacher downloads the meeting attendance, the data I want starts on line 6 of the csv--not line 1
        -currently the start_line variable is hard coded to 1
        -how do I read the file in order to dynamicaly set the start_line variable

    LOTS OF FILES PROBLEM
        -I don't need the roster files once the upload is completed since the rosters are read into the db 
        -meeting files are used to temporarily take attendance and then can be deleted
        -HOW DO I DELETE FILES DYNAMICALLY

    uploading meeting attendance files--don't allow non .csv file








Design thoughts

1. in roster management I need a SQL TABLE that a user can interact with

--offer a quick upload from the xlsx file

--this will change how the program runs
    ---specifically 
        in helpers.py 
            powerschoolDataparser()
                --this should still be offered--but as a quick upload and should still return a dict--but store that dict in the sql table appropirately
        in app.py
            takeAttendance()
                --adapt to the changes from powerschoolDataparser
